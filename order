geth --datadir "./db" --rpc --rpcaddr=0.0.0.0 --rpcport 8545 --rpccorsdomain "*" --rpcapi "eth,net,web3,personal,admin,shh,txpool,debug,miner"  --allow-insecure-unlock --nodiscover --maxpeers 30 --networkid 1981 --port 30303 --mine --minerthreads 1 --etherbase "0xeb680f30715f347d4eb5cd03ac5eced297ac5046" console --allow-insecure-unlock

geth启动节点后，可以用miner.start() 和 miner.stop()进行控制

不启动节点的话，就不能运行js控制台
geth --datadir './db' attach ipc:./db/geth.ipc

新建账户
> personal.newAccount("123456")
"0x3aaab19c7a6d388ad49dd4f8d2fd2713fd71ba7a"
> personal.newAccount("123456")
"0x7d16f2a756c090f88607a7caa914fb828a9b247e"
> eth.accounts
["0x3aaab19c7a6d388ad49dd4f8d2fd2713fd71ba7a", "0x7d16f2a756c090f88607a7caa914fb828a9b247e"]


> balance = web3.fromWei(eth.getBalance(eth.accounts[0]), "ether")
0
> balance = web3.fromWei(eth.getBalance(eth.accounts[1]), "ether")
0
> balance = web3.fromWei(eth.getBalance("0xeb680f30715f347d4eb5cd03ac5eced297ac5046"), "ether")

miner.setEtherbase(eth.accounts[0])

挖矿奖励地址
eth.coinbase

miner.start(1) 和 miner.stop()

personal.unlockAccount(eth.accounts[0], "123456")

eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(1, "ether")})
"0x7190d3995c1fead9584bb3aec08d6186c7cc6ab9b3bb88c1bc779ed3429f4592"


txpool.status
txpool.inspect.pending

miner.start(1);admin.sleepBlocks(1);miner.stop();
 这里把交易包含进去然后挖矿成功的话，就会获得出块奖励和汽油费

eth.getTransaction("0x7190d3995c1fead9584bb3aec08d6186c7cc6ab9b3bb88c1bc779ed3429f4592")

eth.getTransactionReceipt("0x7190d3995c1fead9584bb3aec08d6186c7cc6ab9b3bb88c1bc779ed3429f4592")

eth.blockNumber

eth.getBlock('latest')


eth.getBlock(blockNumber|blockHash)

admin.nodeInfo

admin.nodeInfo.enode

admin.addPeer("enode://7af4da29fa2e790b790ddccbe3dfa558c4df912ca5530d2176fd10a6231bda88b305aae7ccfba2af936aef91ac3f9602737b4b44d17bdf8ceccdd6ba12680b4f@127.0.0.1:30303?discport=0")

admin.peers

geth --datadir './db' account new

Public address of the key:   0xC8B00e4cF6206b0051cdeb4Cb30aE8b46988603F
Path of the secret key file: db/keystore/UTC--2020-11-20T00-33-43.995191212Z--c8b00e4cf6206b0051cdeb4cb30ae8b46988603f

- You can share your public address with anyone. Others need it to interact with you.
- You must NEVER share the secret key with anyone! The key controls access to your funds!
- You must BACKUP your key file! Without the key, it's impossible to access account funds!
- You must REMEMBER your password! Without the password, it's impossible to decrypt the key!



geth --datadir './db' account list

geth --datadir './db' account update address

geth --datadir './db' account import ecc.key

geth --datadir './db' export ./bak

const Web3 = requrie('web3')
const TestRPC = require('ethereumjs-testrpc')
const web3 = new Web3()
web3.eth.getAccounts((err, result) => {
    if (err) { console.log(err) }
    console.log(result)
})
web3.setProvider(TestRPC.provider({
    port: 9999,
    accounts: [
        {balance: '0x12'},
        {balance: '0x13'}
    ]
}))

web3.eth.getAccounts((err, result) => {
    if (err) { console.log(err) }
    console.log(result)
})